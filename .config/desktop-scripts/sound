#! /bin/sh

# dependencies: rofi pactl ttf-material-design-icons(yay)

source "$(dirname "$0")/shared/rofi"

get_cards() {
    pactl list cards short | awk '{print $2}'
}

get_sinks() {
    pactl list sinks short | awk '{print $2}' | grep "output"
}

get_sources() {
    pactl list sources short | awk '{print $2}' | grep "input"
}

source_ports() {
    pactl list sources | awk "/$1/,/Active Port:/" | awk '/Ports:/,/Active Port:/' | head -n-1 | tail -n +2 | tr -d '\t' | grep -v "not available"
}

get_card_profiles() {
    pactl list cards | awk "/$1/,/Active Profile:/" | awk '/Profiles:/,/Active Profiles:/' | head -n-1 | tail -n +2 | tr -d '\t' | grep -v "available: no" | awk '{print substr($1, 0, length($1) - 1)}'
}

get_card_active_profile() {
    pactl list cards | awk "/$1/,/Active Profile:/" | grep "Active Profile:" | awk '{print $3}'
}

cards_menu() {
    cards=$(get_cards)
    selected_card=$(rofi_ask "$cards" "" "Select Card")
    if [[ "$selected_card" != "" ]]
    then
        profiles=$(get_card_profiles "$selected_card")
        active_profile=$(get_card_active_profile "$selected_card")
        selected_profile=$(rofi_ask "$profiles" "$active_profile" "Select '$selected_card' Card Profile")
        if [[ "$selected_profile" != "" ]]
        then
            pactl set-card-profile "$selected_card" "$selected_profile"
        fi
    fi
    sound_menu
}

sinks_or_sources_menu() {
    items=""
    default=""
    title="Output"
    if [[ "$1" == "sinks" ]]
    then
        items=$(get_sinks)
        default=$(pactl get-default-sink)
    else
        items=$(get_sources)
        default=$(pactl get-default-source)
        title="Input"
    fi
    selected=$(rofi_ask "$items" "$default" "Set Default $title Device")

    if [[ "$selected" != "" ]]
    then
        if [[ "$1" == "sinks" ]]
        then
            pactl set-default-sink $selected
        else
            pactl set-default-source $selected
        fi
    fi
    sound_menu
}

get_sink_volume() {
    pactl get-sink-volume @DEFAULT_SINK@ | grep "Volume" | cut -d '/' -f 2 | tr -d ' '
}

get_source_volume() {
    pactl get-source-volume @DEFAULT_SOURCE@ | grep "Volume" | cut -d '/' -f 2 | tr -d ' '
}

is_sink_mute() { # yes | no
    pactl get-sink-mute @DEFAULT_SINK@ | cut -d ':' -f 2 | tr -d ' '
}

is_source_mute() { # yes | no
    pactl get-source-mute @DEFAULT_SOURCE@ | cut -d ':' -f 2 | tr -d ' '
}

sink_or_source_volume_menu() {
    volume="100%"
    mute="no"
    title="Output"
    if [[ "$1" == "sink" ]]
    then
        volume="$(get_sink_volume)"
        mute="$(is_sink_mute)"
    else
        volume="$(get_source_volume)"
        mute="$(is_source_mute)"
        title="Input"
    fi

    menu_items=""
    unmute_menu_item="Unmute"
    mute_menu_item="Mute"

    if [[ "$mute" == "yes" ]]
    then
        menu_items+="$unmute_menu_item\n"
    else
        menu_items+="$mute_menu_item\n"
    fi
    menu_items+="$volume\n"
    selected=$(rofi_ask "$menu_items" "" "Set $title Volume")

    if [[ "$selected" == "$mute_menu_item" ]] || [[ "$selected" == "$unmute_menu_item" ]]
    then
        if [[ "$1" == "sink" ]]
        then
            pactl set-sink-mute @DEFAULT_SINK@ toggle
        else
            pactl set-source-mute @DEFAULT_SOURCE@ toggle
        fi
    elif [[ "$selected" == *"%" ]]
    then
        new_volume=$(rofi_get "Enter $title Volume (0 to 150)")
        if [[ "$new_volume" != *"%" ]]
        then
            new_volume+="%"
        fi
        
        if [[ "$1" == "sink" ]]
        then
            pactl set-sink-volume @DEFAULT_SINK@ $new_volume
        else
            pactl set-source-volume @DEFAULT_SOURCE@ $new_volume
        fi
    else
        sound_menu
        return
    fi
    sink_or_source_volume_menu $1
}

output_menu() {
    first_menu_items=""
    set_sink_volume_menu_item="Set Output Volume"
    show_sinks_menu_item="Select Output Device"
    show_cards_menu_item="Manage Cards Profiles"

    first_menu_items+="$set_sink_volume_menu_item\n"
    first_menu_items+="$show_sinks_menu_item\n"
    first_menu_items+="$show_cards_menu_item\n"
    first_menu_selected=$(rofi_ask "$first_menu_items" "" "Sound Manager")
    if [[ "$first_menu_selected" == "$show_cards_menu_item" ]]
    then
        cards_menu
    elif [[ "$first_menu_selected" == "$show_sinks_menu_item" ]]
    then
        sinks_or_sources_menu "sinks"
    elif [[ "$first_menu_selected" == "$set_sink_volume_menu_item" ]]
    then
        sink_or_source_volume_menu "sink"
    else
        exit 1
    fi
}

input_menu() {
    first_menu_items=""
    set_source_volume_menu_item="Set Input Volume"
    show_sources_menu_item="Select Input Device"

    first_menu_items+="$set_source_volume_menu_item\n"
    first_menu_items+="$show_sources_menu_item\n"
    first_menu_selected=$(rofi_ask "$first_menu_items" "" "Sound Manager")
    if [[ "$first_menu_selected" == "$show_sources_menu_item" ]]
    then
        sinks_or_sources_menu "sources"
    elif [[ "$first_menu_selected" == "$set_source_volume_menu_item" ]]
    then
        sink_or_source_volume_menu "source"
    else
        exit 1
    fi
}

output_icon() {
    sink_icon=""
    if [[ "$(is_sink_mute)" == "yes" ]]
    then
        sink_icon=""
    fi

    echo "$sink_icon $(get_sink_volume)"
}

input_icon() {
    source_icon=""
    if [[ "$(is_source_mute)" == "yes" ]]
    then
        source_icon=""
    fi
    echo "$source_icon $(get_source_volume)"
}

# main
if [[ "$1" == "--output-icon" ]]
then
    output_icon
elif [[ "$1" == "--input-icon" ]]
then
    input_icon
elif [[ "$1" == "--output-menu" ]]
then
    output_menu
elif [[ "$1" == "--input-menu" ]]
then
    input_menu
elif [[ "$1" == "--output-mute-unmute-toggle" ]]
then
    pactl set-sink-mute @DEFAULT_SINK@ toggle
elif [[ "$1" == "--input-mute-unmute-toggle" ]]
then
    pactl set-source-mute @DEFAULT_SOURCE@ toggle
else
    exit 1
fi
exit 0